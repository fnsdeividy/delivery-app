/**
 * Script para testar a autentica√ß√£o
 */

import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function testLogin() {
  console.log('üîê Testando login do lojista...')

  try {
    // Buscar o usu√°rio
    const user = await prisma.user.findUnique({
      where: { email: 'joao@botecodojao.com' },
      include: { store: true }
    })

    if (!user) {
      console.log('‚ùå Usu√°rio n√£o encontrado')
      return
    }

    console.log('‚úÖ Usu√°rio encontrado:')
    console.log(`   Nome: ${user.name}`)
    console.log(`   Email: ${user.email}`)
    console.log(`   Role: ${user.role}`)
    console.log(`   Ativo: ${user.active}`)
    console.log(`   Loja: ${user.storeSlug}`)
    console.log(`   Tem senha: ${!!user.password}`)

    // Testar senha
    const password = 'lojista123'
    const isValidPassword = await bcrypt.compare(password, user.password!)
    
    console.log(`\nüîë Teste de senha: ${isValidPassword ? '‚úÖ V√°lida' : '‚ùå Inv√°lida'}`)

    // Verificar se a loja existe
    if (user.storeSlug) {
      const store = await prisma.store.findUnique({
        where: { slug: user.storeSlug }
      })
      console.log(`üè™ Loja encontrada: ${store ? '‚úÖ' : '‚ùå'} ${store?.name || 'N/A'}`)
    }

    // Simular valida√ß√£o do NextAuth
    console.log('\nüîç Simulando valida√ß√£o do NextAuth:')
    
    if (!user.active) {
      console.log('‚ùå Usu√°rio inativo')
      return
    }

    if (user.role !== 'ADMIN' && user.role !== 'SUPER_ADMIN') {
      console.log('‚ùå Role n√£o permitido para lojista')
      return
    }

    console.log('‚úÖ Todas as valida√ß√µes passaram!')
    console.log('‚úÖ Login deve funcionar corretamente')

  } catch (error) {
    console.error('‚ùå Erro no teste:', error)
  } finally {
    await prisma.$disconnect()
  }
}

testLogin()
  .then(() => {
    console.log('\n‚úÖ Teste conclu√≠do!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('\n‚ùå Erro no teste:', error)
    process.exit(1)
  }) 