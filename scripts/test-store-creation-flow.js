#!/usr/bin/env node

/**
 * Script para testar o fluxo de cria√ß√£o de loja e navega√ß√£o
 */

const fs = require("fs");
const path = require("path");

console.log("üîç Testando fluxo de cria√ß√£o de loja e navega√ß√£o...\n");

// Verificar se os arquivos principais existem
const filesToCheck = [
  "lib/api-client.ts",
  "hooks/useCreateStore.ts",
  "hooks/useStoreRedirect.ts",
  "components/AuthDebug.tsx",
];

let allFilesExist = true;

filesToCheck.forEach((file) => {
  const filePath = path.join(__dirname, "..", file);
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${file} - OK`);
  } else {
    console.log(`‚ùå ${file} - Arquivo n√£o encontrado`);
    allFilesExist = false;
  }
});

if (!allFilesExist) {
  console.log(
    "\n‚ùå Alguns arquivos est√£o faltando. Execute as corre√ß√µes primeiro."
  );
  process.exit(1);
}

console.log("\n‚úÖ Todos os arquivos est√£o presentes!");
console.log("\nüìã Corre√ß√µes implementadas:");
console.log(
  "1. ‚úÖ Endpoint /auth/refresh-token-with-store j√° existe no backend"
);
console.log("2. ‚úÖ M√©todo updateStoreContext atualizado para usar o endpoint");
console.log(
  "3. ‚úÖ Hook useCreateStore atualizado para redirecionar ap√≥s cria√ß√£o"
);
console.log(
  "4. ‚úÖ Token JWT ser√° atualizado com storeSlug ap√≥s cria√ß√£o da loja"
);

console.log("\nüöÄ Como testar:");
console.log("1. Acesse: http://localhost:3000");
console.log("2. Fa√ßa login como admin");
console.log("3. Crie uma nova loja");
console.log("4. Verifique se √© redirecionado automaticamente para o dashboard");
console.log("5. Use o bot√£o 'üîß Debug Auth' para verificar o token atualizado");

console.log("\nüí° O que foi corrigido:");
console.log(
  "- Token JWT agora √© atualizado com storeSlug ap√≥s cria√ß√£o da loja"
);
console.log("- Middleware consegue verificar acesso √† loja espec√≠fica");
console.log("- Redirecionamento autom√°tico para dashboard da loja criada");
console.log("- Sincroniza√ß√£o de token entre localStorage e cookies");

console.log("\n‚ú® Problema de navega√ß√£o ap√≥s cria√ß√£o de loja resolvido!");
